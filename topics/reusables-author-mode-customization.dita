<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="reusables-author-mode-customization">
  <title>Reusable Components in Author Mode Customization</title>
  <body>
    <!--Styles dropdown menu description-->
    <p id="css.styles.intro"><ph keyref="product"/> provides a <uicontrol>Styles</uicontrol>
      drop-down menu on the toolbar that allows you to select one <xref
        keyref="glossentry_main-css-style"><term>main (non-alternate) CSS style</term></xref> and
      multiple <xref keyref="glossentry_alternate-css-style"><term>alternate CSS
        styles</term></xref>. This makes it easy to change the look of the document as it appears in
        <uicontrol>Author</uicontrol> mode.</p>
    <!--List of builtin form controls-->
    <ul id="built-in-form-controls-ul">
      <li id="li_fy3_bgk_54b"><xref href="../../topics/oxy-audio-form-control.dita#oxy-audio-form-control"
            ><ph>Audio</ph></xref> - A media object that plays audio clips.</li>
      <li id="li_gy3_bgk_54b"><xref href="../../topics/oxy-browser-form-control.dita#oxy-browser-form-control"
            ><ph>Browser</ph></xref> - A media object that renders HTML frames or interact with SVG
        documents</li>
      <li id="li_hy3_bgk_54b"><xref href="../../topics/button-editor.dita"><ph>Button</ph></xref> - A graphical user
        interface object that performs a specific action.</li>
      <li id="li_iy3_bgk_54b"><xref href="../../topics/button-group-editor.dita"><ph>Button Group</ph></xref> - A
        graphical user interface group of buttons (such as radio buttons) that perform specific
        actions.</li>
      <li id="li_jy3_bgk_54b"><xref href="../../topics/check-box-editor.dita"><ph>Checkbox</ph></xref> - A graphical
        user interface box that you can click to select or deselect a value.</li>
      <li id="li_ky3_bgk_54b"><xref href="../../topics/combo-box-editor.dita"><ph>Combo Box</ph></xref> - A graphical
        user interface object that can be a drop-down menu or a combination of a drop-down menu and
        a single-line text field.</li>
      <li id="li_ly3_bgk_54b"><xref href="../../topics/date-picker-editor.dita"><ph>Date Picker</ph></xref> - A form
        control object that allows you to select a date in a specified format.</li>
      <li id="li_my3_bgk_54b"><xref href="../../topics/html-content-form-control.dita"><ph>HTML Content</ph></xref> - A
        graphical user interface box that is used for rendering HTML content.</li>
      <li id="li_ny3_bgk_54b"><xref href="../../topics/pop-up-editor.dita"><ph>Pop-up</ph></xref> - A contextual menu
        that provides quick access to various actions.</li>
      <li id="li_oy3_bgk_54b"><xref href="../../topics/dg-text-area-form-control.dita"><ph>Text Area</ph></xref> - A box
        that allows you to enter multiple lines of text.</li>
      <li id="li_py3_bgk_54b"><xref href="../../topics/text-field-editor.dita"><ph>Text Field</ph></xref> - A graphical
        user interface box that allows you to enter a single line of text.</li>
      <li id="li_qy3_bgk_54b"><xref href="../../topics/url-chooser-editor.dita"><ph>URL Chooser</ph></xref> - A dialog
        box that allows you to select the location of local or remote resources.</li>
      <li id="li_ry3_bgk_54b"><xref href="../../topics/oxy-video-form-control.dita#oxy-video-form-control"
            ><ph>Video</ph></xref> - A media object that plays videos.</li>
    </ul>
    <!--Form controls properties-->
    <section product="author developer editor authorEclipse developerEclipse editorEclipse"
      id="form_control_properties"><title>Form Control Properties</title><p id="p_sy3_bgk_54b"><ph
          id="edit_property"><uicontrol>edit</uicontrol> - Lets you edit the value of an attribute,
          the text content of an element, or Processing Instructions (PI). This property can have
          the following values:</ph><ul id="edit_property_ul">
          <li id="attr-name-li"><uicontrol>@attribute_name</uicontrol> - The name of the attribute
            whose value is being edited. If the attribute is in a namespace, the value of the
            property must be a <xref keyref="glossentry_qname"><term>QName</term></xref> and the CSS
            must have a namespace declaration for the prefix.</li>
          <li id="text-li"><uicontrol>#text</uicontrol> - Specifies that the presented/edited value
            is the simple text value of an element.<note id="note_ty3_bgk_54b">You can set the value
              of the <xref href="../../topics/dg-visibility-css-extension.dita"
                  ><codeph>visibility</codeph> property to
                <codeph>-oxy-collapse-text</codeph></xref> to render the text only in the form
              control that the <codeph>oxy_editor</codeph> function specifies.</note></li>
        </ul></p><p id="p_uy3_bgk_54b"><ph id="columns-property"><uicontrol>columns</uicontrol> -
          Controls the width of the form control. The unit size is the width of the
            <uicontrol>w</uicontrol> character.</ph></p><ph id="spell-check"
          ><uicontrol>spell-check</uicontrol> - Set to <uicontrol>true</uicontrol> to enable
        automatic spell checking for text inside the component. The automatic spell checking also
        needs to be enabled in the application. The general configured spell checker language is
        used if an <xmlatt>xml:lang</xmlatt> attribute is not specified explicitly on an ancestor
        element.</ph><p id="p_vy3_bgk_54b"><ph id="width-property"><uicontrol>width</uicontrol> -
          Specifies the width of the content area using relative (<codeph>em</codeph>,
            <codeph>ex</codeph>), absolute (<codeph>in</codeph>, <codeph>cm</codeph>,
            <codeph>mm</codeph>, <codeph>pt</codeph>, <codeph>pc</codeph>, <codeph>px</codeph>), and
          percentage (followed by the <codeph>%</codeph> character) length units. The
            <codeph>width</codeph> property takes precedence over the <codeph>columns</codeph>
          property (if the two are used together).</ph></p><p id="p_wy3_bgk_54b"><ph
          id="width-property-simple"><uicontrol>width</uicontrol> - Specifies the width of the
          content area using relative (<codeph>em</codeph>, <codeph>ex</codeph>), absolute
            (<codeph>in</codeph>, <codeph>cm</codeph>, <codeph>mm</codeph>, <codeph>pt</codeph>,
            <codeph>pc</codeph>, <codeph>px</codeph>), and percentage (followed by the
            <codeph>%</codeph> character) length units.</ph></p><p id="p_xy3_bgk_54b"><ph
          id="height-property"><uicontrol>height</uicontrol> - Specifies the height of the form
          control area using relative (<codeph>em</codeph>, <codeph>ex</codeph>), absolute
            (<codeph>in</codeph>, <codeph>cm</codeph>, <codeph>mm</codeph>, <codeph>pt</codeph>,
            <codeph>pc</codeph>, <codeph>px</codeph>), and percentage (followed by the
            <codeph>%</codeph> character) length units.</ph></p><p id="p_yy3_bgk_54b"><ph
          id="fontInherit-property"><uicontrol>fontInherit</uicontrol> - This value specifies
          whether or not the form control inherits its font from its parent element. The values of
          this property can be <codeph>true</codeph> or <codeph>false</codeph> (default value). To
          make the form control inherit its font from its parent element, set the
            <codeph>fontInherit</codeph> property to <codeph>true</codeph>.</ph></p><p
        id="p_zy3_bgk_54b"><ph id="visible-property"><uicontrol>visible</uicontrol> - Specifies
          whether or not the form control is visible. The possible values of this property are
            <codeph>true</codeph> (default value) and <codeph>false</codeph>.</ph></p><p
        id="p_az3_bgk_54b"><ph id="values-property"><uicontrol>values</uicontrol> - Specifies the
          values that populate the list of proposals. If these values are not specified in the CSS,
          they are collected from the associated XML Schema.</ph></p><p id="p_bz3_bgk_54b"><ph
          id="values"><uicontrol>values</uicontrol> - Specifies the values that are committed when
          the check-boxes are selected. If these values are not specified in the CSS, they are
          collected from the associated XML Schema.</ph><note id="values-note">Typically, when you
          use a comma in the values of a form control, the content that follows a comma is
          considered a new value. If you want to include a comma in the values, precede the comma
          with two backslashes. For example, <codeph>(values, '1\\, 2\\, 3, 4, edit, false)</codeph>
          will display a form control that has <uicontrol>1, 2, 3</uicontrol> for the first value
          and <uicontrol>4</uicontrol> for the second value.</note></p><p id="p_cz3_bgk_54b"><ph
          id="tooltips-property"><uicontrol>tooltips</uicontrol> - Associates tooltips to each value
          in the <codeph>values</codeph> property. The value of this property is a list of tooltip
          messages separated by commas. If you want the tooltip to display a comma, use the <xref
            href="../../topics/editor-variables.dita#editor-variables/edVar-comma"
              ><codeph>${comma}</codeph> variable</xref>.</ph></p><p id="p_dz3_bgk_54b"><ph
          id="tooltip-property"><uicontrol>tooltip</uicontrol> - Specifies a tooltip to be displayed
          when you hover over the form control.</ph></p><p id="p_ez3_bgk_54b"><ph
          id="color-property"><uicontrol>color</uicontrol> - Specifies the foreground color of the
          form control. If the value of the <codeph>color</codeph> property is
            <codeph>inherit</codeph>, the form control has the same color as the element that was
          used to insert it.</ph></p><p id="p_fz3_bgk_54b"><ph id="hover-property-li"
            ><uicontrol>hoverPseudoclassName</uicontrol> - Allows you to change the way an element
          is rendered when you hover over a form control. The value is the name of a CSS
          pseudo-class. When you hover over the form control, the specified pseudo-class will be set
          on the element that contains the form control.</ph></p><p id="p_gz3_bgk_54b"><ph
          id="labels-property"><uicontrol>labels</uicontrol> - This property must have the same
          number of items as the <codeph>values</codeph> property. Each item provides a literal
          description of the items listed in the <codeph>values</codeph> property. These labels can
          be translated using the <xref
            href="../../topics/editor-variables.dita#editor-variables/localization"><i>${i18n()}</i>
            editor variable</xref>.</ph></p><p id="p_hz3_bgk_54b">
        <note id="note-form-control-code-templates">You can use the <xref
            keyref="glossentry_content-completion-assistant"><term>Content Completion
              Assistant</term></xref> in the CSS <ph product="author developer editor">or LESS
          </ph>editor to easily insert a sample of the form control by selecting the corresponding
          code template. The form control code templates are displayed with a <image
            href="../../img/CodeTemplates12.gif" id="image_tlk_c2h_5r"/> symbol in the content
          complete list.</note>
      </p><ph id="samples-ph">To see more detailed examples and more information about how form
        controls work in <ph keyref="product"/>, see the sample files in the following directory:
            <filepath><term conkeyref="reusables-user-guide/oxy-install-dir"
          />/samples/form-controls</filepath>.</ph><p id="p_iz3_bgk_54b"><ph
          id="resultSeparator-property"><uicontrol>resultSeparator</uicontrol> - If multiple
          check-boxes are used, the separator is used to compose the final result. If not specified,
          the <i>space</i> character is used.</ph></p><p id="p_jz3_bgk_54b"><ph
          id="uncheckedValues-property"><uicontrol>uncheckedValues</uicontrol> - Specifies the
          values that are committed when check-boxes are not selected.</ph></p><p id="p_kz3_bgk_54b"
          ><ph id="property-rows"><uicontrol>rows</uicontrol> - This property specifies the number
          of rows that the form control presents.</ph></p><p id="p_lz3_bgk_54b"><ph
          id="action-property"><uicontrol>action</uicontrol> - Defines an action directly, rather
          than using the <codeph>actionID</codeph> parameter to reference an action from the <xref
            href="../../topics/the-action-dialog.dita"><term>document type
          association</term></xref>. This property is defined using the <xref
            href="../../topics/dg-action-function.dita"><i>oxy_action</i>
        function</xref>.</ph></p><p id="p_mz3_bgk_54b"><ph id="action-list-property"
            ><uicontrol>actions</uicontrol> - Defines a sequential list of actions directly, rather
          than using the <codeph>actionID</codeph> parameter to reference actions from the <xref
            href="../../topics/the-action-dialog.dita"><term>document type
          association</term></xref>. This property is defined using the <xref
            href="../../topics/dg-action-list-function.dita"><i>oxy_action_list</i>
          function</xref>.</ph></p><p id="p_nz3_bgk_54b"><ph id="actionDisplayStyle-property"
            ><uicontrol>actionStyle</uicontrol> - Specifies what to display for an action in the
          form control. The values of this property can be <codeph>text</codeph> (default value),
            <codeph>icon</codeph>, or <codeph>both</codeph>.</ph></p><p id="p_oz3_bgk_54b"><ph
          id="background-color-property"><uicontrol>background-color</uicontrol> - Specifies the
          background color of the form control. If the value of the
            <codeph>background-color</codeph> property is <codeph>inherit</codeph>, the form control
          has the same color as the element that was used to insert it.</ph></p>
      <ph id="contentType_property"><uicontrol>contentType</uicontrol> - Specifies the type of
        content that the form control will format with syntax highlighting. The following values are
        supported: <codeph>text/batch; text/c; text/cc; text/css; text/dtd; text/html; text/java;
          text/javascript; text/json; text/markdown; text/nvdl; text/perl; text/plain; text/php;
          text/properties; text/python; text/rnc; text/rng; text/sch; text/shell; text/sql;
          text/wsdl; text/xml; text/xpath; text/xproc; text/xquery; text/xsd; text/xsl;
          text/yaml.</codeph></ph><p id="p_pz3_bgk_54b"><ph id="editorSort"
            ><uicontrol>editorSort</uicontrol> - Specifies the sorting of the values displayed after
          clicking the popup control (for example, clicking a drop-down arrow button). The possible
          values of this property are <codeph>ascending</codeph> and
          <codeph>descending</codeph>.</ph></p><p id="p_qz3_bgk_54b"><ph
          id="enable-read-only-context-property"><uicontrol>enableInReadOnlyContext</uicontrol> - To
          enable <xref href="../../topics/button-editor.dita#button-editor">button form
            controls</xref> or <xref
            href="../../topics/button-group-editor.dita#button-group-editor">groups of buttons form
            controls</xref>, this property needs to be set to <codeph>true</codeph>. This property
          can be used to specify areas as <i>read-only</i> (by setting the
            <codeph>-oxy-editable</codeph> property to <codeph>false</codeph>). This is useful when
          you want to use an action that does not modify the context.</ph></p><p id="p_rz3_bgk_54b"
          ><ph id="href-property"><uicontrol>href</uicontrol> - The absolute or relative location of
          a resource.</ph></p><p id="p_sz3_bgk_54b"><ph id="id-property"><uicontrol>id</uicontrol> -
          The unique identifier of an item.</ph></p><p id="p_tz3_bgk_54b"><ph
          id="indentOnTab_property"><uicontrol>indentOnTab</uicontrol> - Specifies the behavior of
          the <uicontrol><shortcut>Tab</shortcut></uicontrol> key. If the value of this property is
          set to <codeph>true</codeph> (default value), the
            <uicontrol><shortcut>Tab</shortcut></uicontrol> key inserts characters. If it is set to
            <codeph>false</codeph>, <uicontrol><shortcut>Tab</shortcut></uicontrol> is used for
          navigation, jumping to the next editable position in the document.</ph></p><p
        id="p_uz3_bgk_54b"><ph id="rendererSeparator-property"
            ><uicontrol>rendererSeparator</uicontrol> - Defines a separator used when multiple
          values are rendered. If not specified, the value of the <codeph>resultSeparator</codeph>
          property is used.</ph></p><p id="p_vz3_bgk_54b"><ph id="rendererSort"
            ><uicontrol>rendererSort</uicontrol> - Specifies the sorting of the values (labels)
          displayed on the form control before clicking the popup control. The possible values of
          this property are <codeph>ascending</codeph> and <codeph>descending</codeph>.</ph></p><p
        id="p_wz3_bgk_54b"><ph id="selectionMode-property"><uicontrol>selectionMode</uicontrol> -
          Specifies whether the form control allows the selection of a single value or multiple
          values. The predefined values of this property are <codeph>single</codeph> (default value)
          and <codeph>multiple</codeph>.</ph></p>
      <ph id="show_icon"><uicontrol>showIcon</uicontrol> - Specifies if the action icon should be
        displayed on the button form control. If this property is missing then the button displays
        the icon only if it is available, or the text if the icon is not available. The values of
        this property can be <codeph>true</codeph> or <codeph>false</codeph>.</ph><codeblock id="show_icon_codeblock" outputclass="language-css">element {
  content: oxy_button(actionID, 'remove.attribute', showIcon, true);
}</codeblock>
      <ph id="show_text"><uicontrol>showText</uicontrol> - Specifies if the action text should be
        displayed on the button form control. If this property is missing then the button displays
        the icon only if it is available, or the text if the icon is not available. The values of
        this property can be <codeph>true</codeph> or
        <codeph>false</codeph>.</ph><codeblock id="show_text_codeblock" outputclass="language-css">element {
  content: oxy_button(actionID, 'remove.attribute', showText, true);
}</codeblock><p id="p_xz3_bgk_54b"><ph id="sort"><uicontrol>sort</uicontrol> - Specifies the
          default sorting of the form control values (the values displayed before and after clicking
          the popup control). However, the <codeph>editorSort</codeph> and
            <codeph>rendererSort</codeph> properties have a higher priority. The possible values of
          this property are <codeph>ascending</codeph> and <codeph>descending</codeph>.</ph></p><p
        id="p_yz3_bgk_54b">
        <ph id="text-align"><uicontrol>text-align</uicontrol> - Specifies the alignment of the
          generated content in its reserved space. This property has three possible values:
            <uicontrol>left</uicontrol> (default value), <uicontrol>right</uicontrol>,
            <uicontrol>center</uicontrol>.</ph><codeblock id="text-align_codeblock" outputclass="language-css">element {
  content: 
    oxy_label(text, "Label1:", width, 20em, text-align, center)
    oxy_label(text, "Label2:", width, 100px, text-align, right)
}</codeblock></p><p id="p_zz3_bgk_54b"><ph id="text-property"
            ><uicontrol>text</uicontrol> - This property specifies the built-in form control you are
          using.</ph></p><p id="p_a1j_bgk_54b"><ph id="transparent-property"
            ><uicontrol>transparent</uicontrol> - Flattens the aspect of the button form control,
          removing its border and background. The values of this property can be
            <codeph>true</codeph> or <codeph>false</codeph> (default value).</ph></p><p
        id="p_b1j_bgk_54b"><ph id="type-property"><uicontrol>type</uicontrol> - This property
          specifies the built-in form control you are using. This property can have one of the
          following values:</ph></p><p id="p_c1j_bgk_54b"><ph id="actionContext-property"
            ><uicontrol>actionContext</uicontrol> - Specifies the context that the action associated
          with the form control is executed. Its possible values are <codeph>element</codeph>
          (default value) and <codeph>caret</codeph>. If you select the <codeph>element</codeph>
          value, the context is the element that holds the form control. If you select the
            <codeph>caret</codeph> value, the action is invoked at the cursor location. If the
          cursor is not inside the element that holds the form control, the <codeph>element</codeph>
          value is selected automatically.</ph><ul id="ul_d1j_bgk_54b">
          <li id="actionID-property"><uicontrol>actionID</uicontrol> - The ID of the action,
            specified in the <xref href="../../topics/the-action-dialog.dita"><term>document type
                association</term></xref>, that is invoked when you click the button.<note
              id="note_e1j_bgk_54b">The element that contains the form control represents the
              context where the action is invoked.</note></li>
          <li id="li_f1j_bgk_54b">[Dummy li to avoid validation warning]</li>
        </ul></p></section>
    <p id="oxy-action-properties1">
      <ul id="ul_g1j_bgk_54b">
        <li id="li_h1j_bgk_54b"><uicontrol>name</uicontrol> - The name of the action. It will be
          displayed as the label for the button or menu item.</li>
        <li id="li_i1j_bgk_54b"><uicontrol>description</uicontrol> (optional) - A short description
          with details about the result of the action.</li>
        <li id="icon-li"><uicontrol>icon</uicontrol> (optional) - A path relative to the CSS
          pointing to an image (the icon for the action). The path can point to resources that are
          packed in <ph keyref="product"/> (<filepath>oxygen.jar</filepath>) by starting its value
          with <codeph>/</codeph> (for example, <filepath>/images/Remove16.png</filepath>). It can
          also be expressed using an <xref href="../../topics/editor-variables.dita"><term>editor
              variable</term></xref>.</li>
        <li id="operation-li"><uicontrol>operation</uicontrol> - The name of the Java class
          implementing the <xref
            href="https://www.oxygenxml.com/InstData/Editor/SDK/javadoc/ro/sync/ecss/extensions/api/AuthorOperation.html"
            format="html" scope="external"><i>ro.sync.ecss.extensions.api.AuthorOperation</i></xref>
          interface. There is also a variety of <xref
            href="../../topics/dg-default-author-operations.dita">predefined operations</xref> that
          can be used. <note id="note_j1j_bgk_54b">If the name of the operation specified in the CSS
            is not qualified (has no Java package name), then it is considered to be one of the
            built-in <xref href="../../topics/dg-default-author-operations.dita"><ph
                keyref="product"/> operations</xref>. If the class is not found in this package,
            then it will be loaded using the specified name.</note></li>
        <li id="arg-li"><uicontrol>arg-&lt;string></uicontrol> - All arguments with the
            <codeph>arg-</codeph> prefix are passed to the operation (the string that follows the
            <codeph>arg-</codeph> prefix is passed). The argument value supports <xref
            href="../../topics/editor-variables.dita">editor variables</xref>.</li>
        <li id="id-li"><uicontrol>ID</uicontrol> - (optional) - The ID of the action from the
            <term>framework</term>. If this is specified, all others parameters are
          disregarded.</li>
      </ul>
    </p>
    <!--Default Author operations-->
    <p id="p_k1j_bgk_54b"><ph id="schema_aware_argument">This argument applies only on the surround with element
        operation and controls whether or not the insertion is valid, based upon the schema. If the
        insertion is not valid, then wrapping action will be broken up into smaller intervals until
        the wrapping action is valid. For example, if you try to wrap a <i>paragraph</i> element
        with a <i>bold</i> element, it would not be valid, so the operation will wrap the text
        inside the paragraph instead, since it would be valid at that position.</ph></p>
    <!--CSS Subject Selector notes-->
    <section id="processing-instruction-section">
      <title>Taking Processing Instructions into Account in CSS Subject Selectors</title>
      <p id="p_l1j_bgk_54b">You can test for the existence of specific processing instructions (<codeph>PI</codeph>) in
        the child hierarchy of a subject selector.</p>
      <p id="p_m1j_bgk_54b">For
        example:<codeblock outputclass="language-css" id="codeblock_n1j_bgk_54b">@namespace oxy "http://www.oxygenxml.com/extensions/author";

chapter! > oxy|processing-instruction[important][level="high"]{
  color:red;
}</codeblock></p>
      <p id="p_o1j_bgk_54b">This would change the color of a DocBook chapter to red if it contains the
          <codeph>important</codeph> processing
        instruction:<codeblock outputclass="language-xml" id="codeblock_p1j_bgk_54b">&lt;chapter>
   &lt;title>A title&lt;/title>
   &lt;?important level='high'?>
&lt;/chapter></codeblock></p>
    </section>
    <section id="descendant-selector-limitation">
      <title>Descendant Selectors Limitation</title>
      <note type="important" id="note_q1j_bgk_54b">The current implementation has a known limitation. The general
        descendant selectors are taken into account as direct child selectors. For example, the
        following two CSS selectors are considered
        equivalent:<codeblock outputclass="language-ini" id="codeblock_r1j_bgk_54b">a:has(b c)</codeblock>and:<codeblock outputclass="language-ini" id="codeblock_s1j_bgk_54b">a:has(b>c)</codeblock></note>
    </section>
    <!--Sample framework package tip-->
    <note type="tip" id="sample-framework-tip">A sample framework customization package is available
      that you can dabble with and use to help you get started. It can be downloaded from: <xref
        href="https://www.oxygenxml.com/maven/com/oxygenxml/samples/oxygen-sample-framework/24.0.0.0/oxygen-sample-framework-24.0.0.0-package.zip" format="html"
        scope="external"/>. The package includes a sample CSS file, XSL file, schema files, document
      templates, an XML catalog file, custom icons, and other resources.</note>
    <!--Framework customization notes-->
    <p id="p_t1j_bgk_54b">
      <note id="note-editing-action-files">You can add or edit the action files outside of <ph
          keyref="product"/>, but you will need to restart the application each time to reload the
        changes.</note>
      <!--CC configuration reusables-->
    </p>
    <p id="p_path_attr_first">The XPath expressions can accept multiple attribute conditions and
      inside each condition you can use <i>AND/OR</i> boolean operators and parentheses to override
      the priority.</p>
    <p id="p_f51_dgk_54b">You can use one or more of the following attribute conditions (default
      attribute values are not taken into account):<ul id="ul_g51_dgk_54b">
        <li id="li_h51_dgk_54b"><i>element[@attr]</i> - Matches all instances of the specified
          element that include the specified attribute.</li>
        <li id="li_i51_dgk_54b"><i>element[not(@attr)]</i> - Matches all instances of the specified
          element that do not include the specified attribute.</li>
        <li id="li_j51_dgk_54b"><i>element[@attr = "value"]</i> - Matches all instances of the
          specified element that include the specified attribute with the given value.</li>
        <li id="li_k51_dgk_54b"><i>element[@attr != "value"]</i> - Matches all instances of the
          specified element that include the specified attribute and its value is different than the
          one given.</li>
      </ul></p>
    <p id="p_l51_dgk_54b"><uicontrol>Example:</uicontrol> The following are examples of how you
      could use multiple boolean operators and parentheses inside an attribute
      condition:<codeblock outputclass="language-ini" id="codeblock_m51_dgk_54b">*[@a and @b or @c and @d]
*[@a and (@b or @c) and @d]</codeblock></p>
    <p id="p_path_attr_examples">The following are just examples of how simplified XPath expressions
      might look like:<ul id="ul_o51_dgk_54b">
        <li id="li_p51_dgk_54b"><i>elementName</i></li>
        <li id="li_q51_dgk_54b"><i>//elementName</i></li>
        <li id="li_r51_dgk_54b"><i>/elementName1/elementName2/elementName3</i></li>
        <li id="li_s51_dgk_54b"><i>//xs:localName</i></li>
        <li id="li_u51_dgk_54b"><i>//xs:documentation[@lang="en"]</i></li>
      </ul><note id="note_gb3_myc_dpb">Using a namespace prefix requires that you declare it on the
          <xmlelement>elementProposals</xmlelement> element or on an ancestor element. For
        example:<codeblock outputclass="language-xml">&lt;elementProposals xmlns:db5="http://docbook.org/ns/docbook"
  path="db5:listitem" insertElements="db5:para" /></codeblock></note></p>
    <!--Framework script reusables-->
    <p id="p_import_scenarios">The <xmlatt>href</xmlatt> attribute from the
        <xmlelement>addScenarios</xmlelement> element is used to point to the location of the
      scenarios export file. Relative paths are resolved relative to the script's location. The
        <term>${framework}</term> editor variable also resolves to the script's location. You can
      also remove any scenario inherited from the base framework or set the default scenario (the
      one used when another specific scenario is not specified).</p>
    <note id="note_relative_paths" type="notice">Relative paths in the framework extension file are
      automatically resolved to the location of the script file.</note>
  </body>
</topic>
